;; Base layer
(deflayer main
  @kaboom  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX  XX  XX  XX XX XX   XX   XX XX XX
  lrld   @j    @v    @f    @m   @p   @v    XX    XX    @dot    @slash    @question    @quote    @_      XX XX  XX XX
  @tab   @r    @s    @n    @d   @w   XX    XX    ,     @a      @e        @i           @h        rpt     XX XX  XX
  @x     @g    @l    @c    b    rght XX    XX    @-    @u      @o        @y           @k                XX XX  XX XX
  @qwertyl @macRec  @macPlay    @capsnum    @capsword    rght    XX    XX @capsnum      @spcOrSym rght  XX XX  XX XX  XX  XX
  XX @onehandl f20           @t            f21  @russch @russch XX XX      XX       XX XX  XX
)

(defalias
    sshifted (layer-toggle shifted)
    smouse (layer-toggle mouse)
    onesft (one-shot-press-pcancel 1000 @sshifted)
    shft (tap-hold-release 200 200 @onesft 1)
    capsword (tap-dance-eager 422 (
        (tap-hold-release 200 200 (one-shot-press-pcancel 1000 @sshifted) @smouse)
        (layer-switch capswrd)
    ))

    capsnum (tap-dance-eager 422 (
        (tap-hold-release 200 200 (one-shot-press-pcancel 1000 (layer-toggle num)) @smouse);; TODO
        (layer-switch num)
    ))
)

(defalias
    macRec (dynamic-macro-record 0)
    macPlay (dynamic-macro-play 0)
)

;; layer switchers
(defalias
  smain (layer-switch main)
  spcOrSym (tap-hold-release 200 200 spc (layer-toggle sym))
)

;; Base shifted layer
(deflayer shifted
  XX  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX  XX  XX  XX XX XX   XX   XX  XX XX
  XX (macro S-j) (macro S-v)    (macro S-f)    (macro S-m)    (macro S-p)    (macro S-v)    (macro S-7)    (macro S-8)    (macro S-grv)    (macro S-7)    (macro S-1)    (macro S-6)    (macro S-4)           S-nlck S-kp/  S-kp*  S-kp-
  (macro S-tab)  (macro S-r)    (macro S-s)        (macro S-n)    (macro S-d)    (macro S-w)    (macro S-y)    (macro S-u)    S-\    (macro S-a)    (macro S-e)    (macro S-i)    (macro S-h)    grv              S-kp7  S-kp8  S-kp9
  (macro S-x)    (macro S-g)    (macro S-l)    (macro S-c)    (macro S-b)    (macro S-g)    (macro S-h)    (macro S-j)    (macro S-=)    (macro S-u)    (macro S-o)    (macro S-y)         (macro S-k)            S-kp4  S-kp5  S-kp6  S-kp+
  S-lsft 102d (macro S-z)    (macro S-x)    (macro S-c)    (macro S-v)    (macro S-b)    (macro S-n)    (macro S-m)    S-ret    S-.    S-/    S-rsft      S-up        S-kp1  S-kp2  S-kp3
  S-lctl S-lmet S-lalt           (macro S-t)            S-ralt S-rmet S-rctl S-left S-down S-rght      S-kp0       S-kp.  S-kprt
)

;; Home-Row Left-Hand
(defalias
  kaboom (cmd bash -c "sudo killall kanata")

  r (chord main r)
  s (chord main s)
  n (chord main n)
  d (chord main d)

  w (fork w C-w (y)) ;; yw yields ctrl+w for word erasing
)
(defchords main $chord-timeout
  (r     ) r
  ( s    ) s
  (   n  ) n
  (    d ) d
  ( s  d ) (macro S-')
  (s n   ) esc
  (  n d ) tab ;; s+r=control
  (s n d) rght
)

;; Home-Row Right-Hand
(defalias
  a (chord mainr a)
  e (chord mainr e)
  i (chord mainr i)
  h (chord mainr h)
)

(defchords mainr $chord-timeout
  (a     ) a
  ( e    ) (
    fork e u (a)
  )
  (   i  ) i
  (    h ) (switch
        ((key-history e 1)) o break
        ((key-history o 1)) e break
        () (fork h a (u)) break
    )
  (a i)    (macro S-;)
  (e i   ) ret
  (a e  ) C-bspc ;; e+a=control
  (a e i) @scolon ;;
)

(defalias
  snav (layer-toggle nav)
  t (tap-dance 200 (
        (tap-hold-release 200 200 t @snav) ;; tmp
        (layer-switch wordNav)
    ))
  p p
  quote (tap-hold-release 200 200 ' rctl)
  tab (tap-hold-release 200 200 f5 lalt)
  scolon ;
)

;; UY chord
(defalias
  u (chord kyu u)
  y (chord kyu y)
)

(defchords kyu $chord-timeout
  (u) u

  (y) (fork y (macro bspc z) (u))
  (u y) (macro z)
)

;; jf chord
(defalias
  j (chord rsnd j)
  m (chord rsnd m)
  f (chord rsnd f)

  vOrSft (tap-hold-release 200 200 v lsft)
  v v
  o o
  k k
)

(defchords rsnd $chord-timeout-slow
  (j) (tap-hold-release 200 200 j lctl)
  (f) (switch
    ;; jf -> qu
    ((key-history j 1)) (macro bspc q u) break
    ;; mf -> lf
    ((key-history m 1)) (macro bspc l f) break
    ;; f -> f, ff -> fs
    () (tap-dance-eager 200 ((macro f) (macro s))) break
  )
  ;; 'm' on press, 'l' when rolled with 'f' (for 'fl' biagram)
  (m) (switch
    ((key-history f 1)) l break
    ((key-history f 2)) l break
    ((key-history p 1)) l break
    ((key-history p 2)) l break
    ;; m -> m, mm -> mn
    () (tap-dance-eager 200 ((macro m) (macro n))) break
  )
  (f m) (macro end)
  (j m) (macro home)
  (j f) q
)


;; copy/paste
(defalias
  g (chord cp g)
  l (chord cp l)
  c (chord cp c)
  x (chord cp x)
)

(defchords cp $chord-timeout-slow
    (x) (fork x s (g))
    (g) g
    (l) l
    (c) (fork c p (l))
    (g l) C-c
    (l c) C-v
    (g l c) C-a
)

;; main layer symbols, with adaptive modifiers for more syms
(defalias
  question (switch 
    (a) (macro bspc S-0) break
    (e) (macro bspc S-]) break
    (/) (macro bspc = =) break
    () (macro S-/) break
  )
  ;; TODO: How to make the opposite slash then question output `!=`?
  slash (switch
    (e) (macro bspc S-]) break
    (a) (macro bspc S-9) break
    ()  / break
  )
  dot (switch
    (e) (macro bspc S-[) break
    () . break
  )
  - -
)

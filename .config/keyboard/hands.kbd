(defcfg
    danger-enable-cmd yes ;; Enable commands
)

(defalias
   kaboom (cmd bash -c "sudo killall kanata")
   ruswch (multi (layer-switch plain) (cmd bash -c "export SWAYSOCK=$(ls /run/user/1000/sway-ipc.* | head -n 1); swaymsg input 'type:keyboard' xkb_layout rus"))
   hadwch (multi (layer-switch hands) (cmd bash -c "export SWAYSOCK=$(ls /run/user/1000/sway-ipc.* | head -n 1); swaymsg input 'type:keyboard' xkb_layout us"))
)

(defvar
  tt 200
  th 300

  tt_fast 100
  th_fast 150

  ch_th 20
  ch_slw 100

  ftt 135
)

;; Layers
(defalias
    uplr (layer-toggle handsup)
    suplr (layer-toggle hands_super)
    mslr (tap-hold-release $tt_fast $th_fast (one-shot-press-pcancel 50 (layer-toggle handsup)) (layer-toggle mouse))
    symlr (layer-toggle sym)
    numlr (layer-toggle num)
    navlr (layer-toggle nav)

    spc_symlr (tap-hold-release $tt_fast $th_fast spc @symlr)
    ret_numlr (tap-hold-release $tt_fast $th_fast ret @numlr)
    t_navlr   (tap-hold-release $tt_fast $th_fast t @navlr)
)

(defalias
    D_sft (tap-hold-release $ftt $ftt d @uplr)
    R_alt (tap-hold-release $tt $th r lalt)
    S_ctl (tap-hold-release $tt $th s lctl)
    N_sup (tap-hold-release $tt $th n @suplr)

    A_sft (tap-hold-release $ftt $ftt a @uplr)
    E_sup (tap-hold-release $tt $th e lmet)
    I_ctl (tap-hold-release $tt $th i lctl)
    H_alt (tap-hold-release $tt $th h lalt)
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute prev next
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc           nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    ret            kp7  kp8  kp9
  caps a    s    d    f    g    h    j    k    l    ;    '          \             kp4  kp5  kp6  kp+
  lsft 102d z    x    c    v    b    n    m    ,    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           spc            ralt rmet rctl left down rght      kp0       kp.  kprt
)

;; Chord for 'q'
(defalias
    q_chrd_j (chord q_chrd j)
    q_chrd_f (chord q_chrd f)
    q_chrd_m (chord q_chrd m)
    q_chrd_p (chord q_chrd p)
)
(defalias
    Q_chrd_j (chord Q_chrd S-j)
    Q_chrd_f (chord Q_chrd S-f)
    Q_chrd_m (chord Q_chrd S-m)
)

(defchords q_chrd $ch_slw
    (m  ) m
    (j  ) j
    (  f) f
    (  p) p
    (j f) (macro q u)
    (f m) (macro f l) ;; f + m = f + l, removes scissoring
    (p m) (macro p l) ;; PM yields PL
)

(defchords Q_chrd 50
    (S-m  ) S-m
    (S-j  ) S-j
    (  S-f) S-f
    (S-j S-f) (macro S-q u)
    (S-f S-m) S-v
)

;; ---------------------------------------

;; Chord for 'z'
(defalias
    z_chrd_k (chord z_chrd k)
    z_chrd_y (chord z_chrd y)
)
(defchords z_chrd $ch_slw
    (k  ) k
    (  y) y
    (k y) z
)
;; ---------------------------------------

;; Chord for 'esc'
(defalias
    rchrd (chord r_chrd r)
    schrd (chord r_chrd s)
    nchrd (chord r_chrd n)
    dchrd (chord r_chrd d)
)

(defchords r_chrd $ch_th
    (r  ) @R_alt
    (  d) @D_sft
    ( s ) @S_ctl
    (n  ) @N_sup
    (r s) home
    (s d) end
    (s n) esc
    (n d) tab
    (r d) C-bspc
)

;; Chord for right hand
(defalias
    achrd (chord rg_chrd a)
    echrd (chord rg_chrd e)
    ichrd (chord rg_chrd i)
    hchrd (chord rg_chrd h)
)

(defchords rg_chrd $ch_th
    (a) @A_sft
    (e) @E_sup
    (i) @I_ctl
    (h) @H_alt
    (a e) (macro a u)
    (e i) ret
    (a h) esc
    (i h) esc
    (h e) (macro t h e)
    (a i) esc
)

;; ---------------------------------------

;; Copy paste chords
(defalias
    gchrd (chord cp_chrd g)
    lchrd (chord cp_chrd l)
    cchrd (chord cp_chrd c)
    xchrd (chord cp_chrd x)
)

(defchords cp_chrd $ch_th
    (x    )  x
    ( g   )  g
    (   l )  l
    (    c)  c

    (g l c)  C-a

    (g c)  C-z
    (x g)  C-x
    (g l)  C-c
    (l c)  C-v
)
;; ---------------------------------------

(defalias
    quote (tap-dance 155 (' S-'))
)

(deflayer hands
  XX    f1        f2        f3        f4        f5        f6        f7        f8        f9        f10       f11       f12       ins       prnt      del       pp        mute      prev      @kaboom
  lrld  @q_chrd_j 1   @q_chrd_f @q_chrd_m @q_chrd_p                   v        XX                  grv       .         /         S-/       @quote    bspc      nlck      kp/       kp*       kp-
  f5    @rchrd        @schrd    @nchrd    @dchrd    w         XX        XX        ,         @achrd    @echrd    @ichrd    @hchrd    ;          kp7       kp8       kp9
  @xchrd    @gchrd    @lchrd    @cchrd    b         XX   XX   XX        -         u         o         @z_chrd_y @z_chrd_k  kp4       kp5       kp6       kp+
  XX    XX         XX                 XX          XX        @mslr              XX   XX   @spc_symlr @ret_numlr XX   XX         XX        XX                                                                  kp1       kp2       kp3
  XX    XX         XX                 @t_navlr              XX   XX              @ruswch XX            XX   XX                  kp0        kp.       kprt
)

(deflayer handsup
  S-esc  f1   f2   S-f3   S-f4   S-f5   S-f6   S-f7   S-f8   S-f9   S-f10  S-f11  S-f12  S-ins S-prnt S-del   pp   mute  prev @kaboom
  lrld @Q_chrd_j 1    @Q_chrd_f    @Q_chrd_m    S-p    S-v    S-7    S-8    S-grv    S-7    S-/    '    XX           S-nlck S-kp/  S-kp*  S-kp-
  S-tab  (macro S-r)    (macro S-s)        (macro S-n)    (macro S-d)    (macro S-w)    (macro S-y)    (macro S-u)    S-\    (macro S-a)    (macro S-e)    (macro S-i)    (macro S-h)    grv              S-kp7  S-kp8  S-kp9
  (macro S-x)    (macro S-g)    (macro S-l)    (macro S-c)    (macro S-b)    (macro S-g)    (macro S-h)    (macro S-j)    S-=    (macro S-u)    (macro S-o)    (macro S-y)         (macro S-k)            S-kp4  S-kp5  S-kp6  S-kp+
  S-lsft 102d (macro S-z)    (macro S-x)    (macro S-c)    (macro S-v)    (macro S-b)    (macro S-n)    (macro S-m)    S-ret    S-.    S-/    S-rsft      S-up        S-kp1  S-kp2  S-kp3
  S-lctl S-lmet S-lalt           (macro S-t)            S-ralt S-rmet S-rctl S-left S-down S-rght      S-kp0       S-kp.  S-kprt
)

(deflayer hands_super
  XX    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute  prev @kaboom
  lrld       @q_chrd_j 1    @q_chrd_f    @q_chrd_m p         XX    XX               grv .         M-/         M-S-/              '         M-bspc  nlck kp/  kp*  kp-
  XX        @rchrd         @schrd        @nchrd    (tap-hold-release 100 150 M-d lsft)    w    XX        XX     ,   M-a    M-e    M-i           M-h    ;    kp7  kp8  kp9
            @xchrd         @gchrd        @lchrd    @cchrd     b    XX    XX  XX     -   u         o         @z_chrd_y        @z_chrd_k       kp4  kp5  kp6  kp+
  XX XX      XX             XX            XX        XX        XX   XX    M-spc M-ret    XX  XX        XX        XX                                                             kp1  kp2  kp3
  XX XX      XX            M-t          @mslr  XX        XX        XX  XX XX                        kp0       kp.  kprt
)

;; Mouse aliases
(defalias
    mwdwn  (mwheel-down  50 120)
    mwup   (mwheel-up    50 120)
    mwlft  (mwheel-left  50 120)
    mwrght (mwheel-right 50 120)

    mmlft (movemouse-accel-left 10 300 1 5)
    mmdwn (movemouse-accel-down 10 300 1 5)
    mmup  (movemouse-accel-up   10 300 1 5)
    mmrgt (movemouse-accel-right 10 300 1 5)
)

(deflayer mouse
  @kaboom   XX   XX   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute  prev XX
  lrld j    0    f    m    p    6    7    8    9     @mwdwn   @mwup    =    bspc           nlck kp/  kp*  kp-
  tab  @R_alt    @S_ctl        @N_sup    lsft    w    y    u    @mwlft    @mmlft @mmdwn @mmup @mmrgt    @mwrght              kp7  kp8  kp9
  x    g    l    c    b    g    h    j    k    u    o    y         ret            kp4  kp5  kp6  kp+
  lsft 102d z    x    mrgt    v    b    n    mrgt    spc    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           mlft            ralt rmet rctl left down rght      kp0       kp.  kprt
)

(deflayer nav
  @kaboom   XX   XX   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute  prev XX
  lrld j    0    f    m    p    6    7    8    9    @mwdwn    @mwup    =    bspc           nlck kp/  kp*  kp-
  tab  @R_alt    @S_ctl        @N_sup    lsft    w    y    u    -    lft down up rght    k              kp7  kp8  kp9
  x    g    l    c    b    g    h    j    k    u    pgdn    pgup         ret            kp4  kp5  kp6  kp+
  lsft 102d z    x    c    v    b    n    m    spc    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           spc            ralt rmet rctl left down rght      kp0       kp.  kprt
)

(defalias
    brs (tap-hold $tt $th_fast S-[ S-])
    prts (tap-hold $tt $th_fast S-9 S-0)
)
(deflayer sym
  @kaboom   XX   XX   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute  prev XX
  lrld XX    0    [ ]   S-5    6    7    8    S-4    S-,    S-.    \    bspc           nlck kp/  kp*  kp-
  tab  S-7   @prts        @brs    S-1    w    y    u    -    S-- S-8 S-;  (multi (release-key lshft) =)   k              kp7  kp8  kp9
  x    g    S-4   S-2     S-3    g    h    j    k    u    o    y         ret            kp4  kp5  kp6  kp+
  lsft 102d z    x    c    v    b    n    m    spc    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           spc            ralt rmet rctl left down rght      kp0       kp.  kprt
)

(deflayer num
  @kaboom   XX   XX   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute  prev XX
  lrld j    0    f    m    p    6    7    8    9    0    -    =    bspc           nlck kp/  kp*  kp-
  tab  1    2 3 4        t   y    u   . 6  8 9 0      k              kp7  kp8  kp9
  x    g    l   5     b    g    h    j    k    7    o    y         ret            kp4  kp5  kp6  kp+
  lsft 102d z    x    c    v    b    n    m    spc    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           spc            ralt rmet rctl left down rght      kp0       kp.  kprt
)


;; Chord for 'v'
(defalias
    v_chrd_1 (chord v_chrd 1)
    v_chrd_3 (chord v_chrd 3)
    v_chrd_4 (chord v_chrd 4)
)

(defchords v_chrd $ch_th
    (1  ) 1
    (3  ) 3
    (4  ) 4
    (1 3) q
    (3 4) v
)

;; ---------------------------------------
(deflayer plain
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute prev next
  grv  @v_chrd_1    2    @v_chrd_3    @v_chrd_4    5    6    7    8    9    0    -    =    bspc           nlck kp/  kp*  kp-
  tab  q    w    e    (tap-hold-release $tt_fast $th_fast r (layer-toggle plainsft))    t    y    u    i    (tap-hold-release $tt_fast $th_fast o (layer-toggle plainsft))    p    [    ]    ret            kp7  kp8  kp9
  caps a    s    d    f    g    h    XX    k    l    ;    '          \             kp4  kp5  kp6  kp+
  lsft 102d z    x    c    v    b    n    (tap-hold-release 100 130 spc ralt)   (tap-hold-release $tt_fast $th_fast ret ralt)    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           (tap-hold-release 100 150 h (layer-toggle nav))            ralt rmet @hadwch left down rght      kp0       kp.  kprt
)

(deflayer plainsft
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  ins prnt del   pp   mute prev next
  grv  S-1    S-2    S-3    S-4    S-5    S-6    S-7    S-8    S-9    S-0    S--    S-=    bspc           nlck kp/  kp*  kp-
  S-tab  S-q    S-w    S-e    S-r    S-t    S-y    S-u    S-i    S-o    S-p    S-[    S-]    ret            kp7  kp8  kp9
  S-caps S-a    S-s    S-d    S-f    S-g    S-h    @hadwch    S-k    S-l    S-;    '          S-\             kp4  kp5  kp6  kp+
  lsft 102d z    x    c    v    b    n    spc    ret    .    /    rsft      up        kp1  kp2  kp3
  lctl lmet lalt           S-h            ralt rmet rctl left down rght      kp0       kp.  kprt
)
